import { useParams, useNavigate } from "react-router-dom";
import { useState, useEffect } from "react";
import {
  FaStar,
  FaGraduationCap,
  FaHospital,
  FaCalendarAlt,
  FaClock,
  FaPhone,
  FaEnvelope,
  FaMapMarkerAlt,
  FaAward,
  FaUserMd,
  FaHeart,
} from "react-icons/fa";
import Schedule from '../doctor/Schedule';
import DoctorService from '../../service/DoctorService';

const doctorsData = {
  1: {
    id: 1,
    name: "BS. Nguy·ªÖn VƒÉn An",
    specialty: "Chuy√™n khoa Nhi",
    avatar: "/images/doctor1.jpg",
    rating: 4.9,
    reviews: [
      {
        patientName: "Nguy·ªÖn Th·ªã Mai",
        rating: 5,
        comment:
          "B√°c sƒ© r·∫•t t·∫≠n t√¢m, gi·∫£i th√≠ch r√µ r√†ng v√† ƒëi·ªÅu tr·ªã hi·ªáu qu·∫£ cho con t√¥i. R·∫•t h√†i l√≤ng!",
        date: "2025-04-15",
      },
      {
        patientName: "Tr·∫ßn VƒÉn H√πng",
        rating: 4.8,
        comment:
          "B√°c sƒ© An r·∫•t chuy√™n nghi·ªáp, con t√¥i ƒë∆∞·ª£c kh√°m v√† t∆∞ v·∫•n k·ªπ l∆∞·ª°ng. Ch·ªâ h∆°i ƒë√¥ng b·ªánh nh√¢n.",
        date: "2025-03-20",
      },
      {
        patientName: "L√™ Th·ªã H·ªìng",
        rating: 4.9,
        comment:
          "D·ªãch v·ª• t·ªët, b√°c sƒ© th√¢n thi·ªán, m√¥i tr∆∞·ªùng b·ªánh vi·ªán s·∫°ch s·∫Ω. S·∫Ω quay l·∫°i!",
        date: "2025-02-10",
      },
    ],
    experience: "15 nƒÉm kinh nghi·ªám",
    hospital: "B·ªánh vi·ªán Nhi ƒê·ªìng TP.HCM",
    education: "Ti·∫øn sƒ© Y khoa - ƒê·∫°i h·ªçc Y D∆∞·ª£c TP.HCM",
    description:
      "B√°c sƒ© Nguy·ªÖn VƒÉn An l√† chuy√™n gia h√†ng ƒë·∫ßu trong lƒ©nh v·ª±c nhi khoa v·ªõi h∆°n 15 nƒÉm kinh nghi·ªám. √îng ƒë√£ ƒëi·ªÅu tr·ªã th√†nh c√¥ng h√†ng ngh√¨n ca b·ªánh nhi ph·ª©c t·∫°p v√† ƒë∆∞·ª£c nhi·ªÅu gia ƒë√¨nh tin t∆∞·ªüng.",
    specializations: [
      "Nhi tim m·∫°ch",
      "Nhi h√¥ h·∫•p",
      "Nhi ti√™u h√≥a",
      "Kh√°m s·ª©c kh·ªèe ƒë·ªãnh k·ª≥",
    ],
    achievements: [
      "Gi·∫£i th∆∞·ªüng Th·∫ßy thu·ªëc ∆Øu t√∫ 2020",
      "B·∫±ng khen B·ªô Y t·∫ø 2019",
      "Ch·ª©ng ch·ªâ chuy√™n khoa I Nhi khoa",
    ],
    workingHours: [
      { day: "Th·ª© 2 - Th·ª© 6", time: "8:00 - 17:00" },
      { day: "Th·ª© 7", time: "8:00 - 12:00" },
      { day: "Ch·ªß nh·∫≠t", time: "Ngh·ªâ" },
    ],
    availableSlots: [
      "08:00",
      "08:30",
      "09:00",
      "09:30",
      "10:00",
      "10:30",
      "14:00",
      "14:30",
      "15:00",
      "15:30",
      "16:00",
      "16:30",
    ],
    contact: {
      phone: "0901234567",
      email: "bs.nguyenvanan@hospital.com",
      address: "123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM",
    },
    fee: 300000,
    service: "Kh√°m t·ªïng qu√°t",
  },
  2: {
    id: 2,
    name: "BS. Tr·∫ßn Th·ªã B√¨nh",
    specialty: "Chuy√™n gia Dinh d∆∞·ª°ng Nhi",
    avatar: "/images/doctor2.jpg",
    rating: 4.8,
    reviews: [
      {
        patientName: "Ph·∫°m Minh Tu·∫•n",
        rating: 4.7,
        comment:
          "B√°c sƒ© B√¨nh t∆∞ v·∫•n r·∫•t chi ti·∫øt v·ªÅ ch·∫ø ƒë·ªô dinh d∆∞·ª°ng cho con t√¥i. R·∫•t h·ªØu √≠ch!",
        date: "2025-04-01",
      },
      {
        patientName: "Ho√†ng Th·ªã Lan",
        rating: 4.9,
        comment:
          "Ch·ªã B√¨nh r·∫•t nhi·ªát t√¨nh, gi√∫p con t√¥i c·∫£i thi·ªán c√¢n n·∫∑ng ƒë√°ng k·ªÉ. C·∫£m ∆°n b√°c sƒ©!",
        date: "2025-03-15",
      },
    ],
    experience: "12 nƒÉm kinh nghi·ªám",
    hospital: "B·ªánh vi·ªán ƒêa khoa Medic",
    education: "Th·∫°c sƒ© Dinh d∆∞·ª°ng - ƒê·∫°i h·ªçc Y t·∫ø C√¥ng c·ªông",
    description:
      "B√°c sƒ© Tr·∫ßn Th·ªã B√¨nh chuy√™n v·ªÅ dinh d∆∞·ª°ng tr·∫ª em, gi√∫p h√†ng ngh√¨n gia ƒë√¨nh x√¢y d·ª±ng ch·∫ø ƒë·ªô ƒÉn u·ªëng khoa h·ªçc cho con em m√¨nh.",
    specializations: [
      "Dinh d∆∞·ª°ng tr·∫ª em",
      "T∆∞ v·∫•n th·ª±c ƒë∆°n",
      "ƒêi·ªÅu tr·ªã suy dinh d∆∞·ª°ng",
      "B√©o ph√¨ ·ªü tr·∫ª em",
    ],
    achievements: [
      "Chuy√™n gia dinh d∆∞·ª°ng h√†ng ƒë·∫ßu VN",
      "T√°c gi·∫£ 50+ b√†i b√°o khoa h·ªçc",
      "Gi·∫£ng vi√™n ƒê·∫°i h·ªçc Y D∆∞·ª£c",
    ],
    workingHours: [
      { day: "Th·ª© 2 - Th·ª© 6", time: "9:00 - 16:00" },
      { day: "Th·ª© 7", time: "9:00 - 12:00" },
      { day: "Ch·ªß nh·∫≠t", time: "Ngh·ªâ" },
    ],
    availableSlots: [
      "09:00",
      "09:30",
      "10:00",
      "10:30",
      "11:00",
      "11:30",
      "14:00",
      "14:30",
      "15:00",
      "15:30",
    ],
    contact: {
      phone: "0907654321",
      email: "bs.tranthibinh@medic.com",
      address: "456 ƒê∆∞·ªùng XYZ, Qu·∫≠n 3, TP.HCM",
    },
    fee: 250000,
    service: "T∆∞ v·∫•n dinh d∆∞·ª°ng",
  },
  3: {
    id: 3,
    name: "BS. L√™ VƒÉn C∆∞·ªùng",
    specialty: "Chuy√™n gia Ti√™m ch·ªßng",
    avatar: "/images/doctor3.jpg",
    rating: 4.7,
    reviews: [
      {
        patientName: "V≈© VƒÉn Nam",
        rating: 4.6,
        comment:
          "B√°c sƒ© C∆∞·ªùng r·∫•t c·∫©n th·∫≠n khi ti√™m vaccine cho con t√¥i, c·∫£m th·∫•y r·∫•t an t√¢m.",
        date: "2025-04-10",
      },
      {
        patientName: "ƒê·ªó Th·ªã Thanh",
        rating: 4.8,
        comment:
          "D·ªãch v·ª• ti√™m ch·ªßng nhanh g·ªçn, b√°c sƒ© t∆∞ v·∫•n l·ªãch ti√™m r·∫•t r√µ r√†ng.",
        date: "2025-03-05",
      },
    ],
    experience: "10 nƒÉm kinh nghi·ªám",
    hospital: "Trung t√¢m Y t·∫ø D·ª± ph√≤ng",
    education: "B√°c sƒ© Y khoa - ƒê·∫°i h·ªçc Y H√† N·ªôi",
    description:
      "B√°c sƒ© L√™ VƒÉn C∆∞·ªùng l√† chuy√™n gia v·ªÅ ti√™m ch·ªßng v√† y t·∫ø d·ª± ph√≤ng, cam k·∫øt mang ƒë·∫øn d·ªãch v·ª• ti√™m ch·ªßng an to√†n v√† hi·ªáu qu·∫£ nh·∫•t.",
    specializations: [
      "Ti√™m ch·ªßng tr·∫ª em",
      "Y t·∫ø d·ª± ph√≤ng",
      "T∆∞ v·∫•n vaccine",
      "L·ªãch ti√™m chu·∫©n WHO",
    ],
    achievements: [
      "Ch·ª©ng ch·ªâ WHO v·ªÅ ti√™m ch·ªßng",
      "Chuy√™n gia t∆∞ v·∫•n B·ªô Y t·∫ø",
      "10 nƒÉm kh√¥ng tai bi·∫øn ti√™m ch·ªßng",
    ],
    workingHours: [
      { day: "Th·ª© 2 - Th·ª© 6", time: "7:30 - 16:30" },
      { day: "Th·ª© 7", time: "7:30 - 11:30" },
      { day: "Ch·ªß nh·∫≠t", time: "Ngh·ªâ" },
    ],
    availableSlots: [
      "08:00",
      "08:30",
      "09:00",
      "09:30",
      "10:00",
      "10:30",
      "13:30",
      "14:00",
      "14:30",
      "15:00",
      "15:30",
      "16:00",
    ],
    contact: {
      phone: "0912345678",
      email: "bs.levancuong@prevention.gov.vn",
      address: "789 ƒê∆∞·ªùng DEF, Qu·∫≠n 7, TP.HCM",
    },
    fee: 200000,
    service: "Ti√™m ch·ªßng",
  },
};

function DoctorDetail() {
  const { id } = useParams();
  const navigate = useNavigate();
  const [selectedDate, setSelectedDate] = useState("");
  const [selectedTime, setSelectedTime] = useState("");
  const [showBookingForm, setShowBookingForm] = useState(false);
  const [bookingInfo, setBookingInfo] = useState({
    patientName: "",
    phone: "",
    email: "",
    notes: "",
  });
  const [doctor, setDoctor] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchDoctorDetails = async () => {
      try {
        setLoading(true);
        const data = await DoctorService.getDoctorById(id);
        setDoctor(data);
      } catch (error) {
        console.error('Error fetching doctor details:', error);
        setError('Kh√¥ng th·ªÉ t·∫£i th√¥ng tin b√°c sƒ©');
      } finally {
        setLoading(false);
      }
    };

    fetchDoctorDetails();
  }, [id]);

  const reviews = Array.isArray(doctor?.reviews) ? doctor.reviews : [];

  if (!doctor?.id) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <div className="text-center">
          <div className="text-6xl text-gray-400 mb-4">üòî</div>
          <h2 className="text-2xl font-bold text-gray-700 mb-4">
            Kh√¥ng t√¨m th·∫•y b√°c sƒ©
          </h2>
          <button
            onClick={() => navigate("/")}
            className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition duration-300"
          >
            Quay v·ªÅ trang ch·ªß
          </button>
        </div>
      </div>
    );
  }

  const handleBooking = () => {
    if (!selectedDate || !selectedTime) {
      alert("Vui l√≤ng ch·ªçn ng√†y v√† gi·ªù kh√°m!");
      return;
    }
    setShowBookingForm(true);
  };

  const handleBookingSubmit = () => {
    if (!bookingInfo.patientName || !bookingInfo.phone || !bookingInfo.email) {
      alert("Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin b·ªánh nh√¢n!");
      return;
    }
    const bookingData = {
      doctorName: doctor.name,
      specialty: doctor.specialty,
      date: selectedDate,
      time: selectedTime,
      patientName: bookingInfo.patientName,
      phone: bookingInfo.phone,
      email: bookingInfo.email,
      service: doctor.service,
      fee: doctor.fee,
    };
    navigate("/booking-confirmation", { state: { bookingInfo: bookingData } });
    setShowBookingForm(false);
  };

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setBookingInfo((prev) => ({ ...prev, [name]: value }));
  };

  const getAvailableDates = () => {
    const dates = [];
    for (let i = 1; i <= 7; i++) {
      const date = new Date();
      date.setDate(date.getDate() + i);
      dates.push(date.toISOString().split("T")[0]);
    }
    return dates;
  };

  const renderStars = (rating) => {
    const stars = [];
    const validRating = isNaN(rating) || rating < 0 ? 0 : Math.floor(rating);
    for (let i = 1; i <= 5; i++) {
      stars.push(
        <FaStar
          key={i}
          className={i <= validRating ? "text-yellow-400" : "text-gray-300"}
        />
      );
    }
    return stars;
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-white pt-20">
      <div className="container mx-auto px-4 py-8">
        {loading ? (
          <div className="text-center">
            <p className="text-gray-600">ƒêang t·∫£i th√¥ng tin...</p>
          </div>
        ) : error ? (
          <div className="text-center">
            <p className="text-red-600">{error}</p>
          </div>
        ) : doctor ? (
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            <div className="md:col-span-2 space-y-6">
              <div className="bg-white rounded-2xl shadow-xl overflow-hidden mb-8">
                <div className="bg-gradient-to-r from-blue-600 to-blue-800 p-8">
                  <div className="flex flex-col md:flex-row items-center text-white">
                    <div className="relative mb-6 md:mb-0 md:mr-8">
                      <img
                        src={doctor.avatar}
                        alt={doctor.name}
                        className="w-32 h-32 rounded-full border-4 border-white shadow-lg object-cover"
                        onError={(e) => {
                          e.target.src = `https://ui-avatars.com/api/?name=${encodeURIComponent(
                            doctor.name || "Unknown"
                          )}&size=128&background=60a5fa&color=ffffff`;
                        }}
                      />
                      <div className="absolute -bottom-2 -right-2 bg-green-500 w-8 h-8 rounded-full flex items-center justify-center">
                        <FaUserMd className="text-white text-sm" />
                      </div>
                    </div>

                    <div className="flex-1 text-center md:text-left">
                      <h1 className="text-3xl md:text-4xl font-bold mb-2">
                        {doctor.name}
                      </h1>
                      <p className="text-blue-100 text-lg mb-3">{doctor.specialty}</p>

                      <div className="flex flex-wrap items-center justify-center md:justify-start gap-4 mb-4">
                        <div className="flex items-center bg-white bg-opacity-20 rounded-full px-3 py-1">
                          <FaStar className="text-yellow-400 mr-1" />
                          <span className="font-semibold">
                            {doctor.rating || "N/A"}
                          </span>
                          <span className="text-blue-100 ml-1">
                            ({doctor.reviews?.length || 0} ƒë√°nh gi√°)
                          </span>
                        </div>
                        <div className="flex items-center bg-white bg-opacity-20 rounded-full px-3 py-1">
                          <FaGraduationCap className="mr-2" />
                          <span>{doctor.experience}</span>
                        </div>
                      </div>

                      <div className="flex items-center justify-center md:justify-start">
                        <FaHospital className="mr-2" />
                        <span className="text-blue-100">{doctor.hospital}</span>
                      </div>
                    </div>
                  </div>
                </div>

                <div className="border-b border-gray-200">
                  <nav className="flex space-x-8 px-8">
                    <a
                      href="#overview"
                      className="py-4 px-1 border-b-2 border-blue-600 font-medium text-blue-600"
                    >
                      T·ªïng quan
                    </a>
                    <a
                      href="#schedule"
                      className="py-4 px-1 border-b-2 border-transparent font-medium text-gray-500 hover:text-gray-700"
                    >
                      L·ªãch kh√°m
                    </a>
                    <a
                      href="#reviews"
                      className="py-4 px-1 border-b-2 border-transparent font-medium text-gray-500 hover:text-gray-700"
                    >
                      ƒê√°nh gi√°
                    </a>
                    <a
                      href="#contact"
                      className="py-4 px-1 border-b-2 border-transparent font-medium text-gray-500 hover:text-gray-700"
                    >
                      Li√™n h·ªá
                    </a>
                  </nav>
                </div>
              </div>

              <div id="overview" className="bg-white rounded-xl shadow-lg p-6">
                <h2 className="text-2xl font-bold text-gray-800 mb-4 flex items-center">
                  <FaUserMd className="text-blue-600 mr-3" />
                  Gi·ªõi thi·ªáu
                </h2>
                <p className="text-gray-600 leading-relaxed mb-6">
                  {doctor.description}
                </p>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <h3 className="font-semibold text-gray-800 mb-3 flex items-center">
                      <FaGraduationCap className="text-blue-600 mr-2" />
                      H·ªçc v·∫•n
                    </h3>
                    <p className="text-gray-600">{doctor.education}</p>
                  </div>
                  <div>
                    <h3 className="font-semibold text-gray-800 mb-3 flex items-center">
                      <FaHospital className="text-blue-600 mr-2" />
                      N∆°i c√¥ng t√°c
                    </h3>
                    <p className="text-gray-600">{doctor.hospital}</p>
                  </div>
                </div>
              </div>

              <div className="bg-white rounded-xl shadow-lg p-6">
                <h2 className="text-2xl font-bold text-gray-800 mb-4 flex items-center">
                  <FaHeart className="text-red-500 mr-3" />
                  Chuy√™n m√¥n
                </h2>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                  {doctor.specializations?.map((spec, index) => (
                    <div
                      key={index}
                      className="flex items-center p-3 bg-blue-50 rounded-lg"
                    >
                      <div className="w-2 h-2 bg-blue-600 rounded-full mr-3"></div>
                      <span className="text-gray-700">{spec}</span>
                    </div>
                  ))}
                </div>
              </div>

              <div className="bg-white rounded-xl shadow-lg p-6">
                <h2 className="text-2xl font-bold text-gray-800 mb-4 flex items-center">
                  <FaAward className="text-yellow-500 mr-3" />
                  Th√†nh t√≠ch & Ch·ª©ng ch·ªâ
                </h2>
                <div className="space-y-3">
                  {doctor.achievements?.map((achievement, index) => (
                    <div
                      key={index}
                      className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition duration-200"
                    >
                      <FaAward className="text-yellow-500 mr-3 flex-shrink-0" />
                      <span className="text-gray-700">{achievement}</span>
                    </div>
                  ))}
                </div>
              </div>

              <div id="schedule" className="bg-white rounded-xl shadow-lg p-6">
                <h2 className="text-2xl font-bold text-gray-800 mb-4 flex items-center">
                  <FaClock className="text-green-600 mr-3" />
                  Gi·ªù l√†m vi·ªác
                </h2>
                <div className="space-y-3">
                  {doctor.workingHours?.map((schedule, index) => (
                    <div
                      key={index}
                      className="flex justify-between items-center p-3 border border-gray-200 rounded-lg"
                    >
                      <span className="font-medium text-gray-700">
                        {schedule.day}
                      </span>
                      <span
                        className={`px-3 py-1 rounded-full text-sm ${
                          schedule.time === "Ngh·ªâ"
                            ? "bg-red-100 text-red-600"
                            : "bg-green-100 text-green-600"
                        }`}
                      >
                        {schedule.time}
                      </span>
                    </div>
                  ))}
                </div>
              </div>

              <div id="reviews" className="bg-white rounded-xl shadow-lg p-6">
                <h2 className="text-2xl font-bold text-gray-800 mb-4 flex items-center">
                  <FaStar className="text-yellow-400 mr-3" />
                  ƒê√°nh gi√° t·ª´ b·ªánh nh√¢n
                </h2>
                {reviews.length > 0 ? (
                  <div className="space-y-4">
                    {reviews.map((review, index) => {
                      if (
                        !review ||
                        !review.patientName ||
                        !review.rating ||
                        !review.comment ||
                        !review.date
                      ) {
                        return null;
                      }
                      return (
                        <div
                          key={index}
                          className="p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition duration-200"
                        >
                          <div className="flex items-center justify-between mb-2">
                            <div className="flex items-center">
                              <div className="w-10 h-10 rounded-full bg-blue-100 flex items-center justify-center mr-3">
                                <span className="text-blue-600 font-semibold">
                                  {review.patientName.charAt(0)}
                                </span>
                              </div>
                              <div>
                                <p className="font-semibold text-gray-800">
                                  {review.patientName}
                                </p>
                                <div className="flex items-center">
                                  {renderStars(review.rating)}
                                  <span className="ml-2 text-sm text-gray-600">
                                    {review.rating}/5
                                  </span>
                                </div>
                              </div>
                            </div>
                            <p className="text-sm text-gray-500">
                              {review.date &&
                              !isNaN(new Date(review.date).getTime())
                                ? new Date(review.date).toLocaleDateString(
                                    "vi-VN"
                                  )
                                : "Ng√†y kh√¥ng x√°c ƒë·ªãnh"}
                            </p>
                          </div>
                          <p className="text-gray-600">{review.comment}</p>
                        </div>
                      );
                    })}
                  </div>
                ) : (
                  <p className="text-gray-600">
                    Ch∆∞a c√≥ ƒë√°nh gi√° n√†o cho b√°c sƒ© n√†y.
                  </p>
                )}
              </div>

              <Schedule doctorId={id} />
            </div>

            <div className="md:col-span-1 space-y-6">
              <div className="bg-white rounded-xl shadow-lg p-6 sticky top-24">
                <h3 className="text-xl font-bold text-gray-800 mb-4 flex items-center">
                  <FaCalendarAlt className="text-blue-600 mr-3" />
                  ƒê·∫∑t l·ªãch kh√°m
                </h3>

                <div className="space-y-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Ch·ªçn ng√†y kh√°m
                    </label>
                    <select
                      value={selectedDate}
                      onChange={(e) => setSelectedDate(e.target.value)}
                      className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                    >
                      <option value="">Ch·ªçn ng√†y</option>
                      {getAvailableDates().map((date) => (
                        <option key={date} value={date}>
                          {new Date(date).toLocaleDateString("vi-VN", {
                            weekday: "long",
                            year: "numeric",
                            month: "long",
                            day: "numeric",
                          })}
                        </option>
                      ))}
                    </select>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Ch·ªçn gi·ªù kh√°m
                    </label>
                    <div className="grid grid-cols-3 gap-2">
                      {doctor.availableSlots?.map((slot) => (
                        <button
                          key={slot}
                          onClick={() => setSelectedTime(slot)}
                          className={`p-2 text-sm rounded-lg border transition duration-200 ${
                            selectedTime === slot
                              ? "bg-blue-600 text-white border-blue-600"
                              : "bg-white text-gray-700 border-gray-300 hover:border-blue-400"
                          }`}
                        >
                          {slot}
                        </button>
                      ))}
                    </div>
                  </div>

                  <button
                    onClick={handleBooking}
                    className="w-full bg-gradient-to-r from-blue-600 to-blue-700 text-white py-3 px-6 rounded-lg font-semibold hover:from-blue-700 hover:to-blue-800 transition duration-300 transform hover:scale-105 shadow-lg"
                  >
                    ƒê·∫∑t l·ªãch ngay
                  </button>
                </div>
              </div>

              <div id="contact" className="bg-white rounded-xl shadow-lg p-6">
                <h3 className="text-xl font-bold text-gray-800 mb-4">
                  Th√¥ng tin li√™n h·ªá
                </h3>
                <div className="space-y-3">
                  <div className="flex items-center">
                    <FaPhone className="text-blue-600 mr-3" />
                    <span className="text-gray-700">
                      {doctor.contact?.phone || "N/A"}
                    </span>
                  </div>
                  <div className="flex items-center">
                    <FaEnvelope className="text-blue-600 mr-3" />
                    <span className="text-gray-700 text-sm">
                      {doctor.contact?.email || "N/A"}
                    </span>
                  </div>
                  <div className="flex items-start">
                    <FaMapMarkerAlt className="text-blue-600 mr-3 mt-1" />
                    <span className="text-gray-700">
                      {doctor.contact?.address || "N/A"}
                    </span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        ) : (
          <div className="text-center">
            <p className="text-gray-600">Kh√¥ng t√¨m th·∫•y th√¥ng tin b√°c sƒ©</p>
          </div>
        )}
      </div>

      {showBookingForm && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="bg-white rounded-xl shadow-2xl w-full max-w-md max-h-screen overflow-y-auto">
            <div className="p-6">
              <h2 className="text-2xl font-bold text-blue-600 mb-4">
                X√°c nh·∫≠n ƒë·∫∑t l·ªãch
              </h2>

              <div className="bg-blue-50 p-4 rounded-lg mb-6">
                <p>
                  <strong>B√°c sƒ©:</strong> {doctor?.name}
                </p>
                <p>
                  <strong>Ng√†y:</strong>{" "}
                  {new Date(selectedDate).toLocaleDateString("vi-VN")}
                </p>
                <p>
                  <strong>Gi·ªù:</strong> {selectedTime}
                </p>
              </div>

              <div className="space-y-4">
                <input
                  type="text"
                  name="patientName"
                  value={bookingInfo.patientName}
                  onChange={handleInputChange}
                  placeholder="H·ªç v√† t√™n b·ªánh nh√¢n"
                  className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
                />
                <input
                  type="tel"
                  name="phone"
                  value={bookingInfo.phone}
                  onChange={handleInputChange}
                  placeholder="S·ªë ƒëi·ªán tho·∫°i"
                  className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
                />
                <input
                  type="email"
                  name="email"
                  value={bookingInfo.email}
                  onChange={handleInputChange}
                  placeholder="Email"
                  className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
                />
                <textarea
                  name="notes"
                  value={bookingInfo.notes}
                  onChange={handleInputChange}
                  placeholder="Ghi ch√∫ (tri·ªáu ch·ª©ng, y√™u c·∫ßu ƒë·∫∑c bi·ªát...)"
                  rows="3"
                  className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
                />

                <div className="flex justify-end space-x-3 pt-4">
                  <button
                    onClick={() => setShowBookingForm(false)}
                    className="px-6 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 transition duration-200"
                  >
                    H·ªßy
                  </button>
                  <button
                    onClick={handleBookingSubmit}
                    className="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition duration-200"
                  >
                    X√°c nh·∫≠n
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

export default DoctorDetail;
